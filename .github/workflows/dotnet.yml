name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v4

    # Install SteamCMD
    - name: Install SteamCMD
      run: |
        Invoke-WebRequest -Uri "https://steamcdn-a.akamaihd.net/client/installer/steamcmd.zip" -OutFile "steamcmd.zip"
        Expand-Archive -Path "steamcmd.zip" -DestinationPath "$env:USERPROFILE\steamcmd"

    # Install Bannerlord Modding Kit
    - name: Install Bannerlord Modding Kit
      env:
        STEAM_USERNAME: ${{ secrets.STEAM_USERNAME }}
        STEAM_PASSWORD: ${{ secrets.STEAM_PASSWORD }}
      run: |
        $steamcmdPath = "$env:USERPROFILE\steamcmd"
        & "$steamcmdPath\steamcmd.exe" +login $env:STEAM_USERNAME $env:STEAM_PASSWORD +force_install_dir "$steamcmdPath\steamapps\common\MountBlade II Bannerlord Modding Kit" +app_update 1393600 validate +quit

        # Check the exit code of SteamCMD and throw an error if it's not 0
        if ($LASTEXITCODE -ne 0) {
          Write-Host "SteamCMD failed with exit code $LASTEXITCODE" # Optional: Print error message
          exit 1  # Exit with non-zero status to indicate failure
        }
        
    # Install .NET Framework
    - name: Setup .NET Framework
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.x'
      
    # Restore and build PersistentEmpiresLib
    - name: Restore dependencies - PersistentEmpiresLib
      run: dotnet restore PersistentEmpiresLib/PersistentEmpiresLib.csproj
      working-directory: PersistentEmpiresLib

    - name: Build - PersistentEmpiresLib
      run: dotnet build PersistentEmpiresLib/PersistentEmpiresLib.csproj --no-restore
      working-directory: PersistentEmpiresLib

    # Restore and build PersistentEmpiresServer
    - name: Restore dependencies - Server
      run: dotnet restore PersistentEmpiresServer/PersistentEmpiresServer.csproj
      working-directory: PersistentEmpiresServer

    - name: Build - Server
      run: dotnet build PersistentEmpiresServer/PersistentEmpiresServer.csproj --no-restore
      working-directory: PersistentEmpiresServer

    # Test PersistentEmpiresServer
    - name: Test - Server
      run: dotnet test PersistentEmpiresServer/PersistentEmpiresServer.csproj --no-build --verbosity normal
      working-directory: PersistentEmpiresServer

    # Restore and build PersistentEmpiresClient
    - name: Restore dependencies - Client
      run: dotnet restore PersistentEmpiresClient/PersistentEmpiresClient.csproj
      working-directory: PersistentEmpiresClient

    - name: Build - Client
      run: dotnet build PersistentEmpiresClient/PersistentEmpiresClient.csproj --no-restore
      working-directory: PersistentEmpiresClient

    # Test PersistentEmpiresClient
    - name: Test - Client
      run: dotnet test PersistentEmpiresClient/PersistentEmpiresClient.csproj --no-build --verbosity normal
      working-directory: PersistentEmpiresClient

    # Restore and build Harmony
    - name: Restore dependencies - Harmony
      run: dotnet restore PersistentEmpiresHarmony/PersistentEmpiresHarmony.csproj
      working-directory: PersistentEmpiresHarmony

    - name: Build - Harmony
      run: dotnet build PersistentEmpiresHarmony/PersistentEmpiresHarmony.csproj --no-restore
      working-directory: PersistentEmpiresHarmony

    # Test Harmony
    - name: Test - Harmony
      run: dotnet test PersistentEmpiresHarmony/PersistentEmpiresHarmony.csproj --no-build --verbosity normal
      working-directory: PersistentEmpiresHarmony

    # Restore and build PersistentEmpiresSave
    - name: Restore dependencies - Save
      run: dotnet restore PersistentEmpiresSave/PersistentEmpiresSave.csproj
      working-directory: PersistentEmpiresSave

    - name: Build - Save
      run: dotnet build PersistentEmpiresSave/PersistentEmpiresSave.csproj --no-restore
      working-directory: PersistentEmpiresSave

    # Test PersistentEmpiresSave
    - name: Test - Save
      run: dotnet test PersistentEmpiresSave/PersistentEmpiresSave.csproj --no-build --verbosity normal
      working-directory: PersistentEmpiresSave
